<%= link_to "&laquo; Prev Week".html_safe, "/weeks/#{@prev_week.strftime('%Y')}/#{@prev_week.strftime('%W')}", class: 'button' %>
&nbsp;<%= @start_of_week.strftime("%Y") %> Week 
<%= @end_of_week.strftime("%W") %>&nbsp;
<%= link_to "Next Week &raquo;".html_safe, "/weeks/#{@next_week.strftime('%Y')}/#{@next_week.strftime('%W')}", class: 'button' %>
<br>
<style>
  .wrap{
    padding-left:4em;
    padding-top:2em;
  }
  .cal{
    border: 1px solid black;
    width:100%;
    height:600px;
    overflow:visible;
  }
  [data-approved="false"]{
    opacity: .5;
    stroke: #000;
    fill: none;
    stroke-dasharray: 5,5;
    stroke-width: 2;
  }
</style>
<div class='wrap'>
  <svg class='cal'></svg>
</div>
<script src='https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.16/d3.js'></script>
<script>
  var spaces = <%= @spaces.to_json.html_safe %>;
  var data = <%= @events.to_json.html_safe %>;
  var scaleX = d3.scale.linear().domain([8,22]).range([0,100])
  function offsetX(d){
     var m = moment.utc(d.start_date)
     var dayOfWeek = m.day();
     var hours = parseInt(m.format("H"))
     var minutes = m.format("m") / 40;
     return scaleX(hours + minutes) * (1/7)
  }
  function wrap(text, width) {
    text.each(function() {
      var text = d3.select(this),
          words = text.text().split(/\s+/).reverse(),
          word,
          line = [],
          lineNumber = 0,
          lineHeight = 1.1, // ems
          y = text.attr("y"),
          dy = parseFloat(text.attr("dy")),
          tspan = text.text(null).append("tspan").attr("x", 0).attr("y", y).attr("dy", dy + "em");
      while (word = words.pop()) {
        line.push(word);
        tspan.text(line.join(" "));
        if (tspan.node().getComputedTextLength() > width) {
          line.pop();
          tspan.text(line.join(" "));
          line = [word];
          tspan = text.append("tspan").attr("x", 0).attr("y", y).attr("dy", ++lineNumber * lineHeight + dy + "em").text(word);
        }
      }
    });
  }
  var scaleWeek = d3.scale.linear().domain([0,7]).range([0,100])
  // create array of momment objects of dates from empty array
  var dates = new Array(7).fill('').map(function(el, i){
    var m = moment('<%= @start_of_week %>')
    var d = m.add(i, 'days')
    return d;
  })

  var svg = d3
  .select(".cal")

  // x axis
  var xAxis = svg
  .append("g")
  .attr("class","X Axis week")
  .selectAll("text")
  .data(dates)
  .enter()
  .append("g")
  
  xAxis
  .append("rect")
  .attr("x",function(d, i){
    return scaleWeek(i) + "%"
  })
  .attr("rx","3")
  .attr("ry","3")
  .attr("stroke", "#ccc")
  .attr("y", "-2.25em")
  .attr("width", "5em")
  .attr("height", "1.75em")
  .attr("dy","-1em")
  .attr("fill", "#fff")
  .style("font-size", "10px")
  .text(function(d){
    return d.format('dd MM/DD')
  })
  .on("click", function(d){
    var href = "/days/"+ d.format('YYYY-MM-DD')
    window.location = href
  })

  xAxis
  .append("text")
  .attr("x",function(d, i){
    return scaleWeek(i)+.5 + "%"
  })
  .attr("dy","-1em")
  .attr("fill", "#000")
  .style("font-size", "10px")
  .text(function(d){
    return d.format('dd MM/DD')
  })
  .on("click", function(d){
    var href = "/days/"+ d.format('YYYY-MM-DD')
    window.location = href
  })

  // y axis
  svg
  .append("g")
  .attr("class","Y Axis")
  .selectAll("text")
  .data(spaces)
  .enter()
  .append("text")
  .attr("dx", "-60")
  .attr("y", function(d, i){
    return (i * 40) + 30;
  })
  .attr("dy","-1em")
  .attr("fill", "#000")
  .style("font-size", "10px")
  .text(function(d){
    return d.title
  })
  .call(wrap, 60)
  .selectAll(".Y tspan")
  .attr("dx", "-7em")

  // y lines
  svg.append("g")
  .selectAll("line")
  .data(spaces)
  .enter()
  .append("line")
  .attr("x1", 0)
  .attr("y1", function(d, i){
    return (i * 40);
  })
  .attr("x2", "100%")
  .attr("y2", function(d, i){
    return (i * 40);
  })
  .attr("stroke", "#eee")
  .attr("stroke-width", "1")

  var tooltip = d3
  .select("body")
	.append("div")
  .attr('class', 'd3-tip')

  var square = d3
  .select(".cal")
  .selectAll(".events")
  .data(data)
  .enter()
  .append("g")
  .attr("class","events")
  .on("mouseover", function(d){
    tooltip
    .html(function(){
      var el = "<p>"+ d.title +"</p>"
      +"<p>"+ moment.utc(d.start_date).format("h:mma") + " - " + moment.utc(d.end_date).format("h:mma") +"</p>"
      +"<p>Producer: "+ d.producer +"</p>"
      +"<p>Instructor: "+ d.instructor +"</p>"
      +"<p>Attendees: "+ d.number_of_attendees +"</p>"
      return el
    })
    .style("visibility", "visible");
    return tooltip;
  })
  .on("mousemove", function(){
    return tooltip.style("top", (event.pageY-10)+"px").style("left",(event.pageX+10)+"px");
  })
  .on("mouseout", function(){
    return tooltip.style("visibility", "hidden");
  });

  square.append("rect")
  .text(function(d){
    return d.id
  })
  .attr("y", function(d, i){
    var spaceIds = spaces.map(function(d){
      return d.id
    })
    return spaceIds.indexOf(d.space_id) * 40
  })
  .attr("width", function(d){
    var now  = d.start_date;
    var then = d.end_date;
    var ms = moment(then).diff(moment(now));
    var du = moment.duration(ms);
    var hs = du.asHours()
    return ((scaleX(hs + 8)) / 7) +"%"
  })
  .attr("height", "40px")
  .style("fill", function(d){
    return d.custom_color ? d.custom_color : d.color;
  })
  .attr("x", function(d){
     var m = moment.utc(d.start_date)
     var dayOfWeek = m.day() - 1;
     return scaleWeek(dayOfWeek) + offsetX(d) + "%"
  })
  .attr("data-approved", function(d){
    return d.approved ? "" + d.approved : "false"
  })
  .attr("href", function(d){
    return "/events/" + d.id
  })
  .on("click", function( ){
    window.location = this.getAttribute("href")
  })

  square
  .append("text")
  .attr("x", function(d){
     var m = moment.utc(d.start_date)
     var dayOfWeek = m.day() - 1;
     return scaleWeek(dayOfWeek) + "%"
  })
  .attr("y", function(d, i){
    var spaceIds = spaces.map(function(d){
      return d.id
    })
    return spaceIds.indexOf(d.space_id) * 40
  })
  .attr("width","100%")
  .attr("height","100%")
  .attr("dy", "1.25em")
  .attr("dx", ".25em")
  .attr("fill", "#fff")
  .style("font-size", "10px")
  .text(function(d){
    return d.title
  })

</script>
